[{"paper":{"id":"2403.06634","authors":[{"_id":"65efc32c55f190f77e7b1d5b","user":{"avatarUrl":"/avatars/53e53c84f987989deb351dd2ae6ee558.svg","isPro":false,"fullname":"Nicholas Carlini","user":"carlini","type":"user"},"name":"Nicholas Carlini","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:07:28.322Z","hidden":false},{"_id":"65efc32c55f190f77e7b1d5c","user":{"avatarUrl":"/avatars/fb42d42dedd4dde8df4109883cbe7ea9.svg","isPro":false,"fullname":"Daniel Paleka","user":"dpaleka","type":"user"},"name":"Daniel Paleka","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:07:34.833Z","hidden":false},{"_id":"65efc32c55f190f77e7b1d5d","name":"Krishnamurthy Dj Dvijotham","hidden":false},{"_id":"65efc32c55f190f77e7b1d5e","name":"Thomas Steinke","hidden":false},{"_id":"65efc32c55f190f77e7b1d5f","user":{"avatarUrl":"/avatars/2b8e7ddd6c364ba9f1b4806e256e9e91.svg","isPro":false,"fullname":"Jonathan Hayase","user":"Jhayase","type":"user"},"name":"Jonathan Hayase","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:08:04.490Z","hidden":false},{"_id":"65efc32c55f190f77e7b1d60","user":{"avatarUrl":"/avatars/f7b7264a3007f7f0a85be6e3c698f432.svg","isPro":false,"fullname":"A. Feder Cooper","user":"afcooper","type":"user"},"name":"A. Feder Cooper","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:08:10.892Z","hidden":false},{"_id":"65efc32c55f190f77e7b1d61","user":{"avatarUrl":"/avatars/d424605e0d48327082114b878b91b161.svg","isPro":false,"fullname":"Katherine Lee","user":"katherine1ee","type":"user"},"name":"Katherine Lee","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:08:32.515Z","hidden":false},{"_id":"65efc32c55f190f77e7b1d62","user":{"avatarUrl":"/avatars/08caf74525ea3e46fe58c20eb1f3d64d.svg","isPro":false,"fullname":"Matthew Jagielski","user":"jagielski","type":"user"},"name":"Matthew Jagielski","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:08:40.534Z","hidden":false},{"_id":"65efc32c55f190f77e7b1d63","name":"Milad Nasr","hidden":false},{"_id":"65efc32c55f190f77e7b1d64","user":{"avatarUrl":"/avatars/4f808fae966e808105e89712c97d90d2.svg","isPro":false,"fullname":"VConm","user":"ArthurConmy","type":"user"},"name":"Arthur Conmy","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:08:55.056Z","hidden":false},{"_id":"65efc32c55f190f77e7b1d65","user":{"avatarUrl":"/avatars/502a68c0fb2f0c6989fe2869d0a7e3f4.svg","isPro":false,"fullname":"Eric Wallace","user":"EricWallace","type":"user"},"name":"Eric Wallace","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:09:47.872Z","hidden":false},{"_id":"65efc32c55f190f77e7b1d66","name":"David Rolnick","hidden":false},{"_id":"65efc32c55f190f77e7b1d67","user":{"avatarUrl":"/avatars/3e8b3c573e20cf80d329a312bfc34728.svg","isPro":false,"fullname":"Florian Tramer","user":"ftramer","type":"user"},"name":"Florian Tram√®r","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:10:02.779Z","hidden":false}],"publishedAt":"2024-03-11T11:46:12.000Z","title":"Stealing Part of a Production Language Model","summary":"We introduce the first model-stealing attack that extracts precise,\nnontrivial information from black-box production language models like OpenAI's\nChatGPT or Google's PaLM-2. Specifically, our attack recovers the embedding\nprojection layer (up to symmetries) of a transformer model, given typical API\naccess. For under \\20 USD, our attack extracts the entire projection matrix of\nOpenAI's Ada and Babbage language models. We thereby confirm, for the first\ntime, that these black-box models have a hidden dimension of 1024 and 2048,\nrespectively. We also recover the exact hidden dimension size of the\ngpt-3.5-turbo model, and estimate it would cost under 2,000 in queries to\nrecover the entire projection matrix. We conclude with potential defenses and\nmitigations, and discuss the implications of possible future work that could\nextend our attack.","upvotes":63},"publishedAt":"2024-03-12T02:51:25.097Z","title":"Stealing Part of a Production Language Model","mediaUrl":"https://cdn-uploads.huggingface.co/production/uploads/60f1abe7544c2adfd699860c/dhiUnxDGTRatavk4pKf9h.png","numComments":3},{"paper":{"id":"2403.06504","authors":[{"_id":"65efcd5497074b211656dce9","user":{"avatarUrl":"/avatars/69e0911b535db612513ca8e3961470b2.svg","isPro":false,"fullname":"changyueliao","user":"crispig","type":"user"},"name":"Changyue Liao","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:10:32.644Z","hidden":false},{"_id":"65efcd5497074b211656dcea","name":"Mo Sun","hidden":false},{"_id":"65efcd5497074b211656dceb","name":"Zihan Yang","hidden":false},{"_id":"65efcd5497074b211656dcec","name":"Kaiqi Chen","hidden":false},{"_id":"65efcd5497074b211656dced","user":{"avatarUrl":"https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1661454675064-6307c8dda642348dc5e71c20.jpeg?w=200&h=200&f=face","isPro":false,"fullname":"Binhang Yuan","user":"biyuan","type":"user"},"name":"Binhang Yuan","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:11:58.552Z","hidden":false},{"_id":"65efcd5497074b211656dcee","name":"Fei Wu","hidden":false},{"_id":"65efcd5497074b211656dcef","name":"Zeke Wang","hidden":false}],"publishedAt":"2024-03-11T08:25:53.000Z","title":"Adding NVMe SSDs to Enable and Accelerate 100B Model Fine-tuning on a\n  Single GPU","summary":"Recent advances in large language models have brought immense value to the\nworld, with their superior capabilities stemming from the massive number of\nparameters they utilize. However, even the GPUs with the highest memory\ncapacities, currently peaking at 80GB, are far from sufficient to accommodate\nthese vast parameters and their associated optimizer states when conducting\nstochastic gradient descent-based optimization. One approach to hosting such\nhuge models is to aggregate device memory from many GPUs. However, this\napproach introduces prohibitive costs for most academic researchers, who always\nhave a limited budget for many high-end GPU servers. In this paper, we focus on\nhuge model fine-tuning on a single, even low-end, GPU in a commodity server,\nwhich is accessible to most AI researchers. In such a scenario, the\nstate-of-the-art work ZeRO-Infinity suffers from two severe issues when running\nin a commodity server: 1) low GPU utilization due to inefficient swapping, and\n2) limited trainable model size due to CPU memory capacity. The underlying\nreason is that ZeRO-Infinity is optimized for running on high-end GPU servers.\nTo this end, we present Fuyou, a low-cost training framework that enables\nefficient 100B huge model fine-tuning on a low-end server with a low-end GPU\nand limited CPU memory capacity. The key idea is to add the SSD-CPU\ncommunication as an optimization dimension and thus carefully co-optimize\ncomputation and data swapping from a systematic approach to maximize GPU\nutilization. The experimental results show that 1) Fuyou is able to fine-tune\n175B GPT-3 on a consumer GPU RTX 4090 with high GPU utilization, while\nZeRO-Infinity fails to fine-tune; and 2) when training a small GPT-3 13B model,\nFuyou achieves 156 TFLOPS on an RTX 4090 GPU while ZeRO-Infinity only achieves\n45 TFLOPS.","upvotes":38},"publishedAt":"2024-03-12T03:34:44.689Z","title":"Adding NVMe SSDs to Enable and Accelerate 100B Model Fine-tuning on a Single GPU","mediaUrl":"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2403.06504.png","numComments":3},{"paper":{"id":"2403.06738","authors":[{"_id":"65efc93ce9f53442ead9587d","user":{"avatarUrl":"https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/noauth/uW8TKV2sds97lFBwnt6JK.jpeg?w=200&h=200&f=face","isPro":false,"fullname":"Zilong Chen","user":"heheyas","type":"user"},"name":"Zilong Chen","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:26:58.930Z","hidden":false},{"_id":"65efc93ce9f53442ead9587e","name":"Yikai Wang","hidden":false},{"_id":"65efc93ce9f53442ead9587f","name":"Feng Wang","hidden":false},{"_id":"65efc93ce9f53442ead95880","user":{"avatarUrl":"https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/634e15aec1ce28f1de91c470/MdtJKgE_fbHydhqESr-DH.png?w=200&h=200&f=face","isPro":false,"fullname":"Zhengyi Wang","user":"Zhengyi","type":"user"},"name":"Zhengyi Wang","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:28:31.270Z","hidden":false},{"_id":"65efc93ce9f53442ead95881","user":{"avatarUrl":"/avatars/eea059d9295767d7695b5a4d5ff8f53c.svg","isPro":false,"fullname":"Liu","user":"Huaping","type":"user"},"name":"Huaping Liu","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:28:40.798Z","hidden":false}],"publishedAt":"2024-03-11T14:03:36.000Z","title":"V3D: Video Diffusion Models are Effective 3D Generators","summary":"Automatic 3D generation has recently attracted widespread attention. Recent\nmethods have greatly accelerated the generation speed, but usually produce\nless-detailed objects due to limited model capacity or 3D data. Motivated by\nrecent advancements in video diffusion models, we introduce V3D, which\nleverages the world simulation capacity of pre-trained video diffusion models\nto facilitate 3D generation. To fully unleash the potential of video diffusion\nto perceive the 3D world, we further introduce geometrical consistency prior\nand extend the video diffusion model to a multi-view consistent 3D generator.\nBenefiting from this, the state-of-the-art video diffusion model could be\nfine-tuned to generate 360degree orbit frames surrounding an object given a\nsingle image. With our tailored reconstruction pipelines, we can generate\nhigh-quality meshes or 3D Gaussians within 3 minutes. Furthermore, our method\ncan be extended to scene-level novel view synthesis, achieving precise control\nover the camera path with sparse input views. Extensive experiments demonstrate\nthe superior performance of the proposed approach, especially in terms of\ngeneration quality and multi-view consistency. Our code is available at\nhttps://github.com/heheyas/V3D","upvotes":17},"publishedAt":"2024-03-12T03:17:21.812Z","title":"V3D: Video Diffusion Models are Effective 3D Generators","mediaUrl":"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2403.06738.png","numComments":2},{"paper":{"id":"2403.06764","authors":[{"_id":"65efce192392e7d5fb0bd36e","user":{"avatarUrl":"/avatars/b5f8c68801829b5653ee1d55244dbe16.svg","isPro":false,"fullname":"Liang Chen","user":"leonardPKU","type":"user"},"name":"Liang Chen","status":"claimed_verified","statusLastChangedAt":"2024-03-12T12:06:02.476Z","hidden":false},{"_id":"65efce192392e7d5fb0bd36f","name":"Haozhe Zhao","hidden":false},{"_id":"65efce192392e7d5fb0bd370","name":"Tianyu Liu","hidden":false},{"_id":"65efce192392e7d5fb0bd371","user":{"avatarUrl":"/avatars/dec4bbee4a82b773fc58dfc2dce9dbeb.svg","isPro":false,"fullname":"shuai bai","user":"bluelike","type":"user"},"name":"Shuai Bai","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:15:13.985Z","hidden":false},{"_id":"65efce192392e7d5fb0bd372","user":{"avatarUrl":"https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/620760a26e3b7210c2ff1943/VC-rKqimF6yxGESNVlPoR.jpeg?w=200&h=200&f=face","isPro":false,"fullname":"Junyang Lin","user":"JustinLin610","type":"user"},"name":"Junyang Lin","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:15:20.851Z","hidden":false},{"_id":"65efce192392e7d5fb0bd373","user":{"avatarUrl":"/avatars/e57ef5c3b0c4289988ccd42f14e54336.svg","isPro":false,"fullname":"chang zhou","user":"jiemizc","type":"user"},"name":"Chang Zhou","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:15:34.914Z","hidden":false},{"_id":"65efce192392e7d5fb0bd374","name":"Baobao Chang","hidden":false}],"publishedAt":"2024-03-11T14:35:32.000Z","title":"An Image is Worth 1/2 Tokens After Layer 2: Plug-and-Play Inference\n  Acceleration for Large Vision-Language Models","summary":"In this study, we identify the inefficient attention phenomena in Large\nVision-Language Models (LVLMs), notably within prominent models like LLaVA-1.5,\nQwenVL-Chat and Video-LLaVA. We find out that the attention computation over\nvisual tokens is of extreme inefficiency in the deep layers of popular LVLMs,\nsuggesting a need for a sparser approach compared to textual data handling. To\nthis end, we introduce FastV, a versatile plug-and-play method designed to\noptimize computational efficiency by learning adaptive attention patterns in\nearly layers and pruning visual tokens in subsequent ones. Our evaluations\ndemonstrate FastV's ability to dramatically reduce computational costs (e.g., a\n45 reduction in FLOPs for LLaVA-1.5-13B) without sacrificing performance in a\nwide range of image and video understanding tasks. The computational efficiency\nand performance trade-off of FastV are highly customizable and\npareto-efficient. It can compress the FLOPs of a 13B-parameter model to achieve\na lower budget than that of a 7B-parameter model, while still maintaining\nsuperior performance. We believe FastV has practical values for deployment of\nLVLMs in edge devices and commercial models. Code is released at\nhttps://github.com/pkunlp-icler/FastV.","upvotes":16},"publishedAt":"2024-03-12T03:38:03.113Z","title":"An Image is Worth 1/2 Tokens After Layer 2: Plug-and-Play Inference Acceleration for Large Vision-Language Models","mediaUrl":"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2403.06764.png","numComments":1},{"paper":{"id":"2403.06977","authors":[{"_id":"65efca60e2f3a2d6588c8360","user":{"avatarUrl":"https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1643872995181-61fb81006374891646732f37.jpeg?w=200&h=200&f=face","isPro":false,"fullname":"Kunchang Li","user":"Andy1621","type":"user"},"name":"Kunchang Li","status":"claimed_verified","statusLastChangedAt":"2024-03-12T12:06:04.510Z","hidden":false},{"_id":"65efca60e2f3a2d6588c8361","name":"Xinhao Li","hidden":false},{"_id":"65efca60e2f3a2d6588c8362","name":"Yi Wang","hidden":false},{"_id":"65efca60e2f3a2d6588c8363","user":{"avatarUrl":"/avatars/a9245958cc998a4b4b870bf2490fdaee.svg","isPro":false,"fullname":"Yinan He","user":"yinanhe","type":"user"},"name":"Yinan He","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:23:41.881Z","hidden":false},{"_id":"65efca60e2f3a2d6588c8364","name":"Yali Wang","hidden":false},{"_id":"65efca60e2f3a2d6588c8365","user":{"avatarUrl":"/avatars/50198ccb02ccd286975a4613fbabee28.svg","isPro":false,"fullname":"Limin Wang","user":"lmwang","type":"user"},"name":"Limin Wang","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:24:18.661Z","hidden":false},{"_id":"65efca60e2f3a2d6588c8366","name":"Yu Qiao","hidden":false}],"publishedAt":"2024-03-11T17:59:34.000Z","title":"VideoMamba: State Space Model for Efficient Video Understanding","summary":"Addressing the dual challenges of local redundancy and global dependencies in\nvideo understanding, this work innovatively adapts the Mamba to the video\ndomain. The proposed VideoMamba overcomes the limitations of existing 3D\nconvolution neural networks and video transformers. Its linear-complexity\noperator enables efficient long-term modeling, which is crucial for\nhigh-resolution long video understanding. Extensive evaluations reveal\nVideoMamba's four core abilities: (1) Scalability in the visual domain without\nextensive dataset pretraining, thanks to a novel self-distillation technique;\n(2) Sensitivity for recognizing short-term actions even with fine-grained\nmotion differences; (3) Superiority in long-term video understanding,\nshowcasing significant advancements over traditional feature-based models; and\n(4) Compatibility with other modalities, demonstrating robustness in\nmulti-modal contexts. Through these distinct advantages, VideoMamba sets a new\nbenchmark for video understanding, offering a scalable and efficient solution\nfor comprehensive video understanding. All the code and models are available at\nhttps://github.com/OpenGVLab/VideoMamba.","upvotes":15},"publishedAt":"2024-03-12T03:22:08.669Z","title":"VideoMamba: State Space Model for Efficient Video Understanding","mediaUrl":"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2403.06977.png","numComments":0},{"paper":{"id":"2403.06098","authors":[{"_id":"65efc52caa1e46404aca4548","user":{"avatarUrl":"https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/62b32a4429a410b7f6b06710/VzgvmnlYZWuifZTkIkCxy.jpeg?w=200&h=200&f=face","isPro":true,"fullname":"Wenhao Wang","user":"WenhaoWang","type":"user"},"name":"Wenhao Wang","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:31:18.969Z","hidden":false},{"_id":"65efc52caa1e46404aca4549","name":"Yi Yang","hidden":false}],"publishedAt":"2024-03-10T05:40:12.000Z","title":"VidProM: A Million-scale Real Prompt-Gallery Dataset for Text-to-Video\n  Diffusion Models","summary":"The arrival of Sora marks a new era for text-to-video diffusion models,\nbringing significant advancements in video generation and potential\napplications. However, Sora, as well as other text-to-video diffusion models,\nhighly relies on the prompts, and there is no publicly available dataset\nfeaturing a study of text-to-video prompts. In this paper, we introduce\nVidProM, the first large-scale dataset comprising 1.67 million unique\ntext-to-video prompts from real users. Additionally, the dataset includes 6.69\nmillion videos generated by four state-of-the-art diffusion models and some\nrelated data. We initially demonstrate the curation of this large-scale\ndataset, which is a time-consuming and costly process. Subsequently, we show\nhow the proposed VidProM differs from DiffusionDB, a large-scale prompt-gallery\ndataset for image generation. Based on the analysis of these prompts, we\nidentify the necessity for a new prompt dataset specifically designed for\ntext-to-video generation and gain insights into the preferences of real users\nwhen creating videos. Our large-scale and diverse dataset also inspires many\nexciting new research areas. For instance, to develop better, more efficient,\nand safer text-to-video diffusion models, we suggest exploring text-to-video\nprompt engineering, efficient video generation, and video copy detection for\ndiffusion models. We make the collected dataset VidProM publicly available at\nGitHub and Hugging Face under the CC-BY- NC 4.0 License.","upvotes":10},"publishedAt":"2024-03-12T02:59:58.770Z","title":"VidProM: A Million-scale Real Prompt-Gallery Dataset for Text-to-Video Diffusion Models","mediaUrl":"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2403.06098.png","numComments":1},{"paper":{"id":"2403.06807","authors":[{"_id":"65efcf3387bf55c1da3a6225","name":"Jonathan Heek","hidden":false},{"_id":"65efcf3387bf55c1da3a6226","name":"Emiel Hoogeboom","hidden":false},{"_id":"65efcf3387bf55c1da3a6227","name":"Tim Salimans","hidden":false}],"publishedAt":"2024-03-11T15:26:34.000Z","title":"Multistep Consistency Models","summary":"Diffusion models are relatively easy to train but require many steps to\ngenerate samples. Consistency models are far more difficult to train, but\ngenerate samples in a single step.\n  In this paper we propose Multistep Consistency Models: A unification between\nConsistency Models (Song et al., 2023) and TRACT (Berthelot et al., 2023) that\ncan interpolate between a consistency model and a diffusion model: a trade-off\nbetween sampling speed and sampling quality. Specifically, a 1-step consistency\nmodel is a conventional consistency model whereas we show that a infty-step\nconsistency model is a diffusion model.\n  Multistep Consistency Models work really well in practice. By increasing the\nsample budget from a single step to 2-8 steps, we can train models more easily\nthat generate higher quality samples, while retaining much of the sampling\nspeed benefits. Notable results are 1.4 FID on Imagenet 64 in 8 step and 2.1\nFID on Imagenet128 in 8 steps with consistency distillation. We also show that\nour method scales to a text-to-image diffusion model, generating samples that\nare very close to the quality of the original model.","upvotes":9},"publishedAt":"2024-03-12T03:42:44.576Z","title":"Multistep Consistency Models","mediaUrl":"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2403.06807.png","numComments":0},{"paper":{"id":"2403.05812","authors":[{"_id":"65efcbd5f62dffb225ce0e35","name":"Anson Ho","hidden":false},{"_id":"65efcbd5f62dffb225ce0e36","name":"Tamay Besiroglu","hidden":false},{"_id":"65efcbd5f62dffb225ce0e37","name":"Ege Erdil","hidden":false},{"_id":"65efcbd5f62dffb225ce0e38","user":{"avatarUrl":"/avatars/7dea81e7e8f4be92e99ebcfa39150dc2.svg","isPro":false,"fullname":"David Owen","user":"davidowen-epoch","type":"user"},"name":"David Owen","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:37:31.164Z","hidden":false},{"_id":"65efcbd5f62dffb225ce0e39","user":{"avatarUrl":"/avatars/36c7c126244e5f25ae65f7e8562a89c2.svg","isPro":false,"fullname":"Robi Rahman","user":"robi-epoch","type":"user"},"name":"Robi Rahman","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:37:16.997Z","hidden":false},{"_id":"65efcbd5f62dffb225ce0e3a","user":{"avatarUrl":"/avatars/b67cda187d941341794c9da3c7dc3b39.svg","isPro":false,"fullname":"Zifan Guo","user":"luminolblue","type":"user"},"name":"Zifan Carl Guo","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:37:41.899Z","hidden":false},{"_id":"65efcbd5f62dffb225ce0e3b","name":"David Atkinson","hidden":false},{"_id":"65efcbd5f62dffb225ce0e3c","user":{"avatarUrl":"/avatars/d3d7ba9515d0d7c02a92e6e914dea1ec.svg","isPro":false,"fullname":"Neil Thompson","user":"neilqvt","type":"user"},"name":"Neil Thompson","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:38:13.562Z","hidden":false},{"_id":"65efcbd5f62dffb225ce0e3d","user":{"avatarUrl":"https://aeiljuispo.cloudimg.io/v7/https://cdn-uploads.huggingface.co/production/uploads/1624434395907-60d2e60d07da9c17c72708f9.png?w=200&h=200&f=face","isPro":false,"fullname":"Jaime Sevilla","user":"Jsevillamol","type":"user"},"name":"Jaime Sevilla","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:38:19.528Z","hidden":false}],"publishedAt":"2024-03-09T06:26:21.000Z","title":"Algorithmic progress in language models","summary":"We investigate the rate at which algorithms for pre-training language models\nhave improved since the advent of deep learning. Using a dataset of over 200\nlanguage model evaluations on Wikitext and Penn Treebank spanning 2012-2023, we\nfind that the compute required to reach a set performance threshold has halved\napproximately every 8 months, with a 95% confidence interval of around 5 to 14\nmonths, substantially faster than hardware gains per Moore's Law. We estimate\naugmented scaling laws, which enable us to quantify algorithmic progress and\ndetermine the relative contributions of scaling models versus innovations in\ntraining algorithms. Despite the rapid pace of algorithmic progress and the\ndevelopment of new architectures such as the transformer, our analysis reveals\nthat the increase in compute made an even larger contribution to overall\nperformance improvements over this time period. Though limited by noisy\nbenchmark data, our analysis quantifies the rapid progress in language\nmodeling, shedding light on the relative contributions from compute and\nalgorithms.","upvotes":9},"publishedAt":"2024-03-12T03:28:21.983Z","title":"Algorithmic progress in language models","mediaUrl":"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2403.05812.png","numComments":1},{"paper":{"id":"2403.06775","authors":[{"_id":"65efc768424023c1047732ef","user":{"avatarUrl":"/avatars/511a490c7dd0bd5fa23d18eaf95881b3.svg","isPro":false,"fullname":"qiao","user":"pengchonghercy","type":"user"},"name":"Pengchong Qiao","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:40:30.481Z","hidden":false},{"_id":"65efc768424023c1047732f0","name":"Lei Shang","hidden":false},{"_id":"65efc768424023c1047732f1","name":"Chang Liu","hidden":false},{"_id":"65efc768424023c1047732f2","user":{"avatarUrl":"/avatars/208b9d05b30f0094c3301936fabf4656.svg","isPro":false,"fullname":"Baigui Sun","user":"sunbaigui","type":"user"},"name":"Baigui Sun","status":"admin_assigned","statusLastChangedAt":"2024-03-12T12:43:08.153Z","hidden":false},{"_id":"65efc768424023c1047732f3","name":"Xiangyang Ji","hidden":false},{"_id":"65efc768424023c1047732f4","name":"Jie Chen","hidden":false}],"publishedAt":"2024-03-11T14:43:40.000Z","title":"FaceChain-SuDe: Building Derived Class to Inherit Category Attributes\n  for One-shot Subject-Driven Generation","summary":"Subject-driven generation has garnered significant interest recently due to\nits ability to personalize text-to-image generation. Typical works focus on\nlearning the new subject's private attributes. However, an important fact has\nnot been taken seriously that a subject is not an isolated new concept but\nshould be a specialization of a certain category in the pre-trained model. This\nresults in the subject failing to comprehensively inherit the attributes in its\ncategory, causing poor attribute-related generations. In this paper, motivated\nby object-oriented programming, we model the subject as a derived class whose\nbase class is its semantic category. This modeling enables the subject to\ninherit public attributes from its category while learning its private\nattributes from the user-provided example. Specifically, we propose a\nplug-and-play method, Subject-Derived regularization (SuDe). It constructs the\nbase-derived class modeling by constraining the subject-driven generated images\nto semantically belong to the subject's category. Extensive experiments under\nthree baselines and two backbones on various subjects show that our SuDe\nenables imaginative attribute-related generations while maintaining subject\nfidelity. Codes will be open sourced soon at FaceChain\n(https://github.com/modelscope/facechain).","upvotes":3},"publishedAt":"2024-03-12T03:09:31.888Z","title":"FaceChain-SuDe: Building Derived Class to Inherit Category Attributes for One-shot Subject-Driven Generation","mediaUrl":"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2403.06775.png","numComments":1}]