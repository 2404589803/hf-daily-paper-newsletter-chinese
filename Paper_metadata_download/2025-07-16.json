[
  {
    "paper": {
      "id": "2507.07104",
      "authors": [
        {
          "_id": "686f95e9706a6ea4654189ff",
          "user": {
            "_id": "66e0b013733965882099cc37",
            "avatarUrl": "https://cdn-avatars.huggingface.co/v1/production/uploads/66e0b013733965882099cc37/CkTK2kV2v-TfdYiwsW6Tx.jpeg",
            "isPro": true,
            "fullname": "Tiezheng Zhang",
            "user": "PatZhang11",
            "type": "user"
          },
          "name": "Tiezheng Zhang",
          "status": "claimed_verified",
          "statusLastChangedAt": "2025-07-11T08:03:27.231Z",
          "hidden": false
        },
        {
          "_id": "686f95e9706a6ea465418a00",
          "name": "Yitong Li",
          "hidden": false
        },
        {
          "_id": "686f95e9706a6ea465418a01",
          "name": "Yu-cheng Chou",
          "hidden": false
        },
        {
          "_id": "686f95e9706a6ea465418a02",
          "name": "Jieneng Chen",
          "hidden": false
        },
        {
          "_id": "686f95e9706a6ea465418a03",
          "name": "Alan Yuille",
          "hidden": false
        },
        {
          "_id": "686f95e9706a6ea465418a04",
          "name": "Chen Wei",
          "hidden": false
        },
        {
          "_id": "686f95e9706a6ea465418a05",
          "user": {
            "_id": "64b5ba6060274cbb296d6288",
            "avatarUrl": "/avatars/67e0343954dda6e92ed3f6e7976f9f87.svg",
            "isPro": true,
            "fullname": "Junfei Xiao",
            "user": "lambertxiao",
            "type": "user"
          },
          "name": "Junfei Xiao",
          "status": "claimed_verified",
          "statusLastChangedAt": "2025-07-11T08:03:25.003Z",
          "hidden": false
        }
      ],
      "publishedAt": "2025-07-09T17:59:04.000Z",
      "submittedOnDailyAt": "2025-07-16T04:05:40.175Z",
      "title": "Vision-Language-Vision Auto-Encoder: Scalable Knowledge Distillation\n  from Diffusion Models",
      "submittedOnDailyBy": {
        "_id": "64b5ba6060274cbb296d6288",
        "avatarUrl": "/avatars/67e0343954dda6e92ed3f6e7976f9f87.svg",
        "isPro": true,
        "fullname": "Junfei Xiao",
        "user": "lambertxiao",
        "type": "user"
      },
      "summary": "Building state-of-the-art Vision-Language Models (VLMs) with strong\ncaptioning capabilities typically necessitates training on billions of\nhigh-quality image-text pairs, requiring millions of GPU hours. This paper\nintroduces the Vision-Language-Vision (VLV) auto-encoder framework, which\nstrategically leverages key pretrained components: a vision encoder, the\ndecoder of a Text-to-Image (T2I) diffusion model, and subsequently, a Large\nLanguage Model (LLM). Specifically, we establish an information bottleneck by\nregularizing the language representation space, achieved through freezing the\npretrained T2I diffusion decoder. Our VLV pipeline effectively distills\nknowledge from the text-conditioned diffusion model using continuous\nembeddings, demonstrating comprehensive semantic understanding via high-quality\nreconstructions. Furthermore, by fine-tuning a pretrained LLM to decode the\nintermediate language representations into detailed descriptions, we construct\na state-of-the-art (SoTA) captioner comparable to leading models like GPT-4o\nand Gemini 2.0 Flash. Our method demonstrates exceptional cost-efficiency and\nsignificantly reduces data requirements; by primarily utilizing single-modal\nimages for training and maximizing the utility of existing pretrained models\n(image encoder, T2I diffusion model, and LLM), it circumvents the need for\nmassive paired image-text datasets, keeping the total training expenditure\nunder $1,000 USD.",
      "upvotes": 10,
      "discussionId": "686f95e9706a6ea465418a06",
      "projectPage": "https://lambert-x.github.io/Vision-Language-Vision/",
      "githubRepo": "https://github.com/Tiezheng11/Vision-Language-Vision",
      "ai_summary": "The VLV auto-encoder framework uses pretrained vision and text models to create a cost-effective and data-efficient captioning system.",
      "ai_keywords": [
        "Vision-Language Models",
        "VLV auto-encoder",
        "vision encoder",
        "Text-to-Image diffusion model",
        "Large Language Model",
        "information bottleneck",
        "continuous embeddings",
        "semantic understanding",
        "captioning",
        "fine-tuning",
        "GPT-4o",
        "Gemini 2.0 Flash"
      ],
      "githubStars": 18
    },
    "publishedAt": "2025-07-09T13:59:04.000Z",
    "title": "Vision-Language-Vision Auto-Encoder: Scalable Knowledge Distillation\n  from Diffusion Models",
    "summary": "Building state-of-the-art Vision-Language Models (VLMs) with strong\ncaptioning capabilities typically necessitates training on billions of\nhigh-quality image-text pairs, requiring millions of GPU hours. This paper\nintroduces the Vision-Language-Vision (VLV) auto-encoder framework, which\nstrategically leverages key pretrained components: a vision encoder, the\ndecoder of a Text-to-Image (T2I) diffusion model, and subsequently, a Large\nLanguage Model (LLM). Specifically, we establish an information bottleneck by\nregularizing the language representation space, achieved through freezing the\npretrained T2I diffusion decoder. Our VLV pipeline effectively distills\nknowledge from the text-conditioned diffusion model using continuous\nembeddings, demonstrating comprehensive semantic understanding via high-quality\nreconstructions. Furthermore, by fine-tuning a pretrained LLM to decode the\nintermediate language representations into detailed descriptions, we construct\na state-of-the-art (SoTA) captioner comparable to leading models like GPT-4o\nand Gemini 2.0 Flash. Our method demonstrates exceptional cost-efficiency and\nsignificantly reduces data requirements; by primarily utilizing single-modal\nimages for training and maximizing the utility of existing pretrained models\n(image encoder, T2I diffusion model, and LLM), it circumvents the need for\nmassive paired image-text datasets, keeping the total training expenditure\nunder $1,000 USD.",
    "thumbnail": "https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2507.07104.png",
    "numComments": 1,
    "submittedBy": {
      "_id": "64b5ba6060274cbb296d6288",
      "avatarUrl": "/avatars/67e0343954dda6e92ed3f6e7976f9f87.svg",
      "fullname": "Junfei Xiao",
      "name": "lambertxiao",
      "type": "user",
      "isPro": true,
      "isHf": false,
      "isHfAdmin": false,
      "isMod": false,
      "followerCount": 6
    },
    "isAuthorParticipating": true
  },
  {
    "paper": {
      "id": "2507.09404",
      "authors": [
        {
          "_id": "68774155257d4f04353707d3",
          "name": "Mustafa Shukor",
          "hidden": false
        },
        {
          "_id": "68774155257d4f04353707d4",
          "name": "Louis Bethune",
          "hidden": false
        },
        {
          "_id": "68774155257d4f04353707d5",
          "name": "Dan Busbridge",
          "hidden": false
        },
        {
          "_id": "68774155257d4f04353707d6",
          "name": "David Grangier",
          "hidden": false
        },
        {
          "_id": "68774155257d4f04353707d7",
          "name": "Enrico Fini",
          "hidden": false
        },
        {
          "_id": "68774155257d4f04353707d8",
          "name": "Alaaeldin El-Nouby",
          "hidden": false
        },
        {
          "_id": "68774155257d4f04353707d9",
          "name": "Pierre Ablin",
          "hidden": false
        }
      ],
      "publishedAt": "2025-07-12T21:16:08.000Z",
      "submittedOnDailyAt": "2025-07-16T04:39:10.654Z",
      "title": "Scaling Laws for Optimal Data Mixtures",
      "submittedOnDailyBy": {
        "_id": "62bdeedd01dc22b4d22a371e",
        "avatarUrl": "/avatars/3cc0643feb53bf2e895ec12c275d5483.svg",
        "isPro": false,
        "fullname": "Mustafa Shukor",
        "user": "mshukor",
        "type": "user"
      },
      "summary": "Large foundation models are typically trained on data from multiple domains,\nwith the data mixture--the proportion of each domain used--playing a critical\nrole in model performance. The standard approach to selecting this mixture\nrelies on trial and error, which becomes impractical for large-scale\npretraining. We propose a systematic method to determine the optimal data\nmixture for any target domain using scaling laws. Our approach accurately\npredicts the loss of a model of size N trained with D tokens and a specific\ndomain weight vector h. We validate the universality of these scaling laws by\ndemonstrating their predictive power in three distinct and large-scale\nsettings: large language model (LLM), native multimodal model (NMM), and large\nvision models (LVM) pretraining. We further show that these scaling laws can\nextrapolate to new data mixtures and across scales: their parameters can be\naccurately estimated using a few small-scale training runs, and used to\nestimate the performance at larger scales and unseen domain weights. The\nscaling laws allow to derive the optimal domain weights for any target domain\nunder a given training budget (N,D), providing a principled alternative to\ncostly trial-and-error methods.",
      "upvotes": 7,
      "discussionId": "68774156257d4f04353707da",
      "ai_summary": "Scaling laws predict optimal data mixtures for large foundation models, improving performance across different domains and scales.",
      "ai_keywords": [
        "scaling laws",
        "large language model",
        "native multimodal model",
        "large vision models",
        "domain weights",
        "parameter estimation",
        "performance prediction",
        "training budget"
      ]
    },
    "publishedAt": "2025-07-12T17:16:08.000Z",
    "title": "Scaling Laws for Optimal Data Mixtures",
    "summary": "Large foundation models are typically trained on data from multiple domains,\nwith the data mixture--the proportion of each domain used--playing a critical\nrole in model performance. The standard approach to selecting this mixture\nrelies on trial and error, which becomes impractical for large-scale\npretraining. We propose a systematic method to determine the optimal data\nmixture for any target domain using scaling laws. Our approach accurately\npredicts the loss of a model of size N trained with D tokens and a specific\ndomain weight vector h. We validate the universality of these scaling laws by\ndemonstrating their predictive power in three distinct and large-scale\nsettings: large language model (LLM), native multimodal model (NMM), and large\nvision models (LVM) pretraining. We further show that these scaling laws can\nextrapolate to new data mixtures and across scales: their parameters can be\naccurately estimated using a few small-scale training runs, and used to\nestimate the performance at larger scales and unseen domain weights. The\nscaling laws allow to derive the optimal domain weights for any target domain\nunder a given training budget (N,D), providing a principled alternative to\ncostly trial-and-error methods.",
    "thumbnail": "https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2507.09404.png",
    "numComments": 1,
    "submittedBy": {
      "_id": "62bdeedd01dc22b4d22a371e",
      "avatarUrl": "/avatars/3cc0643feb53bf2e895ec12c275d5483.svg",
      "fullname": "Mustafa Shukor",
      "name": "mshukor",
      "type": "user",
      "isPro": false,
      "isHf": false,
      "isHfAdmin": false,
      "isMod": false,
      "followerCount": 59
    },
    "isAuthorParticipating": false
  },
  {
    "paper": {
      "id": "2507.10787",
      "authors": [
        {
          "_id": "68771a98257d4f04353707b2",
          "name": "Yilun Zhao",
          "hidden": false
        },
        {
          "_id": "68771a98257d4f04353707b3",
          "name": "Chengye Wang",
          "hidden": false
        },
        {
          "_id": "68771a98257d4f04353707b4",
          "name": "Chuhan Li",
          "hidden": false
        },
        {
          "_id": "68771a98257d4f04353707b5",
          "name": "Arman Cohan",
          "hidden": false
        }
      ],
      "publishedAt": "2025-07-14T20:35:25.000Z",
      "submittedOnDailyAt": "2025-07-16T01:51:11.312Z",
      "title": "Can Multimodal Foundation Models Understand Schematic Diagrams? An\n  Empirical Study on Information-Seeking QA over Scientific Papers",
      "submittedOnDailyBy": {
        "_id": "62f662bcc58915315c4eccea",
        "avatarUrl": "https://cdn-avatars.huggingface.co/v1/production/uploads/62f662bcc58915315c4eccea/zOAQLONfMP88zr70sxHK-.jpeg",
        "isPro": true,
        "fullname": "Yilun Zhao",
        "user": "yilunzhao",
        "type": "user"
      },
      "summary": "This paper introduces MISS-QA, the first benchmark specifically designed to\nevaluate the ability of models to interpret schematic diagrams within\nscientific literature. MISS-QA comprises 1,500 expert-annotated examples over\n465 scientific papers. In this benchmark, models are tasked with interpreting\nschematic diagrams that illustrate research overviews and answering\ncorresponding information-seeking questions based on the broader context of the\npaper. We assess the performance of 18 frontier multimodal foundation models,\nincluding o4-mini, Gemini-2.5-Flash, and Qwen2.5-VL. We reveal a significant\nperformance gap between these models and human experts on MISS-QA. Our analysis\nof model performance on unanswerable questions and our detailed error analysis\nfurther highlight the strengths and limitations of current models, offering key\ninsights to enhance models in comprehending multimodal scientific literature.",
      "upvotes": 2,
      "discussionId": "68771a98257d4f04353707b6",
      "githubRepo": "https://github.com/yilunzhao/MISS-QA",
      "ai_summary": "A benchmark evaluates multimodal models' ability to interpret scientific schematic diagrams and answer related questions, revealing performance gaps and insights for improvement.",
      "ai_keywords": [
        "multimodal foundation models",
        "schematic diagrams",
        "scientific literature",
        "information-seeking questions",
        "error analysis"
      ],
      "githubStars": 0
    },
    "publishedAt": "2025-07-14T16:35:25.000Z",
    "title": "Can Multimodal Foundation Models Understand Schematic Diagrams? An\n  Empirical Study on Information-Seeking QA over Scientific Papers",
    "summary": "This paper introduces MISS-QA, the first benchmark specifically designed to\nevaluate the ability of models to interpret schematic diagrams within\nscientific literature. MISS-QA comprises 1,500 expert-annotated examples over\n465 scientific papers. In this benchmark, models are tasked with interpreting\nschematic diagrams that illustrate research overviews and answering\ncorresponding information-seeking questions based on the broader context of the\npaper. We assess the performance of 18 frontier multimodal foundation models,\nincluding o4-mini, Gemini-2.5-Flash, and Qwen2.5-VL. We reveal a significant\nperformance gap between these models and human experts on MISS-QA. Our analysis\nof model performance on unanswerable questions and our detailed error analysis\nfurther highlight the strengths and limitations of current models, offering key\ninsights to enhance models in comprehending multimodal scientific literature.",
    "thumbnail": "https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2507.10787.png",
    "numComments": 1,
    "submittedBy": {
      "_id": "62f662bcc58915315c4eccea",
      "avatarUrl": "https://cdn-avatars.huggingface.co/v1/production/uploads/62f662bcc58915315c4eccea/zOAQLONfMP88zr70sxHK-.jpeg",
      "fullname": "Yilun Zhao",
      "name": "yilunzhao",
      "type": "user",
      "isPro": true,
      "isHf": false,
      "isHfAdmin": false,
      "isMod": false,
      "followerCount": 14
    },
    "isAuthorParticipating": false
  },
  {
    "paper": {
      "id": "2507.09411",
      "authors": [
        {
          "_id": "68771a0b257d4f04353707a9",
          "name": "Md Ajwad Akil",
          "hidden": false
        },
        {
          "_id": "68771a0b257d4f04353707aa",
          "name": "Adrian Shuai Li",
          "hidden": false
        },
        {
          "_id": "68771a0b257d4f04353707ab",
          "name": "Imtiaz Karim",
          "hidden": false
        },
        {
          "_id": "68771a0b257d4f04353707ac",
          "name": "Arun Iyengar",
          "hidden": false
        },
        {
          "_id": "68771a0b257d4f04353707ad",
          "name": "Ashish Kundu",
          "hidden": false
        },
        {
          "_id": "68771a0b257d4f04353707ae",
          "name": "Vinny Parla",
          "hidden": false
        },
        {
          "_id": "68771a0b257d4f04353707af",
          "name": "Elisa Bertino",
          "hidden": false
        }
      ],
      "publishedAt": "2025-07-12T22:11:10.000Z",
      "submittedOnDailyAt": "2025-07-16T01:54:43.633Z",
      "title": "LLMalMorph: On The Feasibility of Generating Variant Malware using\n  Large-Language-Models",
      "submittedOnDailyBy": {
        "_id": "6159f88235226e98eaa28b39",
        "avatarUrl": "https://cdn-avatars.huggingface.co/v1/production/uploads/1633286253722-noauth.jpeg",
        "isPro": false,
        "fullname": "Md Ajwad Akil",
        "user": "Ajwad",
        "type": "user"
      },
      "summary": "Large Language Models (LLMs) have transformed software development and\nautomated code generation. Motivated by these advancements, this paper explores\nthe feasibility of LLMs in modifying malware source code to generate variants.\nWe introduce LLMalMorph, a semi-automated framework that leverages semantical\nand syntactical code comprehension by LLMs to generate new malware variants.\nLLMalMorph extracts function-level information from the malware source code and\nemploys custom-engineered prompts coupled with strategically defined code\ntransformations to guide the LLM in generating variants without\nresource-intensive fine-tuning. To evaluate LLMalMorph, we collected 10 diverse\nWindows malware samples of varying types, complexity and functionality and\ngenerated 618 variants. Our thorough experiments demonstrate that it is\npossible to reduce the detection rates of antivirus engines of these malware\nvariants to some extent while preserving malware functionalities. In addition,\ndespite not optimizing against any Machine Learning (ML)-based malware\ndetectors, several variants also achieved notable attack success rates against\nan ML-based malware classifier. We also discuss the limitations of current LLM\ncapabilities in generating malware variants from source code and assess where\nthis emerging technology stands in the broader context of malware variant\ngeneration.",
      "upvotes": 2,
      "discussionId": "68771a0c257d4f04353707b0",
      "ai_summary": "A semi-automated framework uses Large Language Models to generate malware variants, demonstrating reduced detection rates and notable attack success against ML classifiers.",
      "ai_keywords": [
        "Large Language Models",
        "LLMalMorph",
        "semantical code comprehension",
        "syntactical code comprehension",
        "function-level information",
        "custom-engineered prompts",
        "code transformations",
        "antivirus engines",
        "ML-based malware detectors",
        "malware variant generation"
      ]
    },
    "publishedAt": "2025-07-12T18:11:10.000Z",
    "title": "LLMalMorph: On The Feasibility of Generating Variant Malware using\n  Large-Language-Models",
    "summary": "Large Language Models (LLMs) have transformed software development and\nautomated code generation. Motivated by these advancements, this paper explores\nthe feasibility of LLMs in modifying malware source code to generate variants.\nWe introduce LLMalMorph, a semi-automated framework that leverages semantical\nand syntactical code comprehension by LLMs to generate new malware variants.\nLLMalMorph extracts function-level information from the malware source code and\nemploys custom-engineered prompts coupled with strategically defined code\ntransformations to guide the LLM in generating variants without\nresource-intensive fine-tuning. To evaluate LLMalMorph, we collected 10 diverse\nWindows malware samples of varying types, complexity and functionality and\ngenerated 618 variants. Our thorough experiments demonstrate that it is\npossible to reduce the detection rates of antivirus engines of these malware\nvariants to some extent while preserving malware functionalities. In addition,\ndespite not optimizing against any Machine Learning (ML)-based malware\ndetectors, several variants also achieved notable attack success rates against\nan ML-based malware classifier. We also discuss the limitations of current LLM\ncapabilities in generating malware variants from source code and assess where\nthis emerging technology stands in the broader context of malware variant\ngeneration.",
    "thumbnail": "https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2507.09411.png",
    "numComments": 1,
    "submittedBy": {
      "_id": "6159f88235226e98eaa28b39",
      "avatarUrl": "https://cdn-avatars.huggingface.co/v1/production/uploads/1633286253722-noauth.jpeg",
      "fullname": "Md Ajwad Akil",
      "name": "Ajwad",
      "type": "user",
      "isPro": false,
      "isHf": false,
      "isHfAdmin": false,
      "isMod": false,
      "followerCount": 1
    },
    "isAuthorParticipating": false
  },
  {
    "paper": {
      "id": "2507.09075",
      "authors": [
        {
          "_id": "687731d0257d4f04353707be",
          "name": "Wasi Uddin Ahmad",
          "hidden": false
        },
        {
          "_id": "687731d0257d4f04353707bf",
          "name": "Somshubra Majumdar",
          "hidden": false
        },
        {
          "_id": "687731d0257d4f04353707c0",
          "name": "Aleksander Ficek",
          "hidden": false
        },
        {
          "_id": "687731d0257d4f04353707c1",
          "name": "Sean Narenthiran",
          "hidden": false
        },
        {
          "_id": "687731d0257d4f04353707c2",
          "name": "Mehrzad Samadi",
          "hidden": false
        },
        {
          "_id": "687731d0257d4f04353707c3",
          "name": "Jocelyn Huang",
          "hidden": false
        },
        {
          "_id": "687731d0257d4f04353707c4",
          "name": "Siddhartha Jain",
          "hidden": false
        },
        {
          "_id": "687731d0257d4f04353707c5",
          "name": "Vahid Noroozi",
          "hidden": false
        },
        {
          "_id": "687731d0257d4f04353707c6",
          "name": "Boris Ginsburg",
          "hidden": false
        }
      ],
      "publishedAt": "2025-07-11T23:35:54.000Z",
      "submittedOnDailyAt": "2025-07-16T03:31:02.680Z",
      "title": "OpenCodeReasoning-II: A Simple Test Time Scaling Approach via\n  Self-Critique",
      "submittedOnDailyBy": {
        "_id": "6254f8e5d21e4cc386b881ad",
        "avatarUrl": "https://cdn-avatars.huggingface.co/v1/production/uploads/1649899774659-6254f8e5d21e4cc386b881ad.jpeg",
        "isPro": false,
        "fullname": "Somshubra Majumdar",
        "user": "smajumdar94",
        "type": "user"
      },
      "summary": "Recent advancements in reasoning-based Large Language Models (LLMs),\nparticularly their potential through test-time scaling, have created\nsignificant opportunities for distillation in code generation and critique.\nHowever, progress in both areas fundamentally depends on large-scale,\nhigh-quality datasets. In this work, we introduce OpenCodeReasoning-II, a\ndataset consists of 2.5M question-solution-critique triples (approx. 35K unique\nprogramming questions), making it nearly twice the size of the previous largest\npublicly available code reasoning dataset. In this work, we employ a two-stage\nsupervised fine-tuning strategy. The first stage focuses on fine-tuning for\ncode generation, while the second stage involves the joint training of models\nfor both code generation and critique. Our resulting finetuned Qwen2.5-Instruct\nmodels achieve performance in code generation that either exceeds or equals the\nbest prior open-weight distilled models. Notably, the integration of our code\ngeneration and critique models leads to significant improvements in competitive\ncoding performance. Furthermore, we present an extension of the LiveCodeBench\nbenchmark to specifically support the C++ programming language, thereby\nfacilitating more comprehensive LLM evaluation using this benchmark.",
      "upvotes": 1,
      "discussionId": "687731d0257d4f04353707c7"
    },
    "publishedAt": "2025-07-11T19:35:54.000Z",
    "title": "OpenCodeReasoning-II: A Simple Test Time Scaling Approach via\n  Self-Critique",
    "summary": "Recent advancements in reasoning-based Large Language Models (LLMs),\nparticularly their potential through test-time scaling, have created\nsignificant opportunities for distillation in code generation and critique.\nHowever, progress in both areas fundamentally depends on large-scale,\nhigh-quality datasets. In this work, we introduce OpenCodeReasoning-II, a\ndataset consists of 2.5M question-solution-critique triples (approx. 35K unique\nprogramming questions), making it nearly twice the size of the previous largest\npublicly available code reasoning dataset. In this work, we employ a two-stage\nsupervised fine-tuning strategy. The first stage focuses on fine-tuning for\ncode generation, while the second stage involves the joint training of models\nfor both code generation and critique. Our resulting finetuned Qwen2.5-Instruct\nmodels achieve performance in code generation that either exceeds or equals the\nbest prior open-weight distilled models. Notably, the integration of our code\ngeneration and critique models leads to significant improvements in competitive\ncoding performance. Furthermore, we present an extension of the LiveCodeBench\nbenchmark to specifically support the C++ programming language, thereby\nfacilitating more comprehensive LLM evaluation using this benchmark.",
    "thumbnail": "https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2507.09075.png",
    "numComments": 1,
    "submittedBy": {
      "_id": "6254f8e5d21e4cc386b881ad",
      "avatarUrl": "https://cdn-avatars.huggingface.co/v1/production/uploads/1649899774659-6254f8e5d21e4cc386b881ad.jpeg",
      "fullname": "Somshubra Majumdar",
      "name": "smajumdar94",
      "type": "user",
      "isPro": false,
      "isHf": false,
      "isHfAdmin": false,
      "isMod": false,
      "followerCount": 27
    },
    "isAuthorParticipating": false
  },
  {
    "paper": {
      "id": "2507.07186",
      "authors": [
        {
          "_id": "68708a2ac8391850d609787d",
          "name": "Itay Itzhak",
          "hidden": false
        },
        {
          "_id": "68708a2ac8391850d609787e",
          "name": "Yonatan Belinkov",
          "hidden": false
        },
        {
          "_id": "68708a2ac8391850d609787f",
          "name": "Gabriel Stanovsky",
          "hidden": false
        }
      ],
      "publishedAt": "2025-07-09T18:01:14.000Z",
      "submittedOnDailyAt": "2025-07-16T06:16:00.646Z",
      "title": "Planted in Pretraining, Swayed by Finetuning: A Case Study on the\n  Origins of Cognitive Biases in LLMs",
      "submittedOnDailyBy": {
        "_id": "610c1e1a423fe7d80928aefd",
        "avatarUrl": "/avatars/8591584d678cf7fddace01e223953a63.svg",
        "isPro": true,
        "fullname": "Itay Itzhak",
        "user": "itay1itzhak",
        "type": "user"
      },
      "summary": "Large language models (LLMs) exhibit cognitive biases -- systematic\ntendencies of irrational decision-making, similar to those seen in humans.\nPrior work has found that these biases vary across models and can be amplified\nby instruction tuning. However, it remains unclear if these differences in\nbiases stem from pretraining, finetuning, or even random noise due to training\nstochasticity. We propose a two-step causal experimental approach to\ndisentangle these factors. First, we finetune models multiple times using\ndifferent random seeds to study how training randomness affects over 30\ncognitive biases. Second, we introduce cross-tuning -- swapping\ninstruction datasets between models to isolate bias sources. This swap uses\ndatasets that led to different bias patterns, directly testing whether biases\nare dataset-dependent. Our findings reveal that while training randomness\nintroduces some variability, biases are mainly shaped by pretraining: models\nwith the same pretrained backbone exhibit more similar bias patterns than those\nsharing only finetuning data. These insights suggest that understanding biases\nin finetuned models requires considering their pretraining origins beyond\nfinetuning effects. This perspective can guide future efforts to develop\nprincipled strategies for evaluating and mitigating bias in LLMs.",
      "upvotes": 1,
      "discussionId": "68708a2bc8391850d6097880",
      "ai_summary": "Research identifies pretraining as the primary source of cognitive biases in large language models, distinguishing its influence from finetuning and training randomness.",
      "ai_keywords": [
        "large language models",
        "cognitive biases",
        "instruction tuning",
        "pretraining",
        "finetuning",
        "training randomness",
        "cross-tuning",
        "dataset-dependent biases"
      ]
    },
    "publishedAt": "2025-07-09T14:01:14.000Z",
    "title": "Planted in Pretraining, Swayed by Finetuning: A Case Study on the\n  Origins of Cognitive Biases in LLMs",
    "summary": "Large language models (LLMs) exhibit cognitive biases -- systematic\ntendencies of irrational decision-making, similar to those seen in humans.\nPrior work has found that these biases vary across models and can be amplified\nby instruction tuning. However, it remains unclear if these differences in\nbiases stem from pretraining, finetuning, or even random noise due to training\nstochasticity. We propose a two-step causal experimental approach to\ndisentangle these factors. First, we finetune models multiple times using\ndifferent random seeds to study how training randomness affects over 30\ncognitive biases. Second, we introduce cross-tuning -- swapping\ninstruction datasets between models to isolate bias sources. This swap uses\ndatasets that led to different bias patterns, directly testing whether biases\nare dataset-dependent. Our findings reveal that while training randomness\nintroduces some variability, biases are mainly shaped by pretraining: models\nwith the same pretrained backbone exhibit more similar bias patterns than those\nsharing only finetuning data. These insights suggest that understanding biases\nin finetuned models requires considering their pretraining origins beyond\nfinetuning effects. This perspective can guide future efforts to develop\nprincipled strategies for evaluating and mitigating bias in LLMs.",
    "thumbnail": "https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2507.07186.png",
    "numComments": 1,
    "submittedBy": {
      "_id": "610c1e1a423fe7d80928aefd",
      "avatarUrl": "/avatars/8591584d678cf7fddace01e223953a63.svg",
      "fullname": "Itay Itzhak",
      "name": "itay1itzhak",
      "type": "user",
      "isPro": true,
      "isHf": false,
      "isHfAdmin": false,
      "isMod": false,
      "followerCount": 1
    },
    "isAuthorParticipating": false
  }
]