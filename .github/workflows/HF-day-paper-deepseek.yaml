name: HF Daily Paper DeepSeek

on:
  workflow_run:
    workflows: ["Paper_metadata_download"]
    types:
      - completed
  workflow_dispatch:  # 保留手动触发选项

jobs:
  check-and-run:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event.workflow_run.conclusion == 'success' &&
       github.event.workflow_run.name == 'Paper_metadata_download')
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check paper status
      id: check_status
      run: |
        # 检查最新的JSON文件
        LATEST_JSON=$(ls -t Paper_metadata_download/*.json | head -n 1)
        if [ -f "$LATEST_JSON" ]; then
          CONTENT=$(cat "$LATEST_JSON")
          if echo "$CONTENT" | grep -q '"status": "success"'; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "Found new papers to process"
          else
            echo "status=no_data" >> $GITHUB_OUTPUT
            echo "No new papers to process"
          fi
        else
          echo "status=error" >> $GITHUB_OUTPUT
          echo "No metadata files found"
        fi
    
    - name: Set up Python
      if: steps.check_status.outputs.status == 'success'
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      if: steps.check_status.outputs.status == 'success'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get update
        sudo apt-get install -y fonts-wqy-microhei fonts-wqy-zenhei fonts-noto-cjk
        
    - name: Configure fonts
      if: steps.check_status.outputs.status == 'success'
      run: |
        sudo mkdir -p /usr/share/fonts/truetype/wqy
        sudo fc-cache -fv
        fc-list :lang=zh
        ls -l /usr/share/fonts/truetype/wqy/
        echo "Checking matplotlib font cache..."
        python -c "import matplotlib.font_manager as fm; print([f.name for f in fm.fontManager.ttflist if 'wqy' in f.name.lower() or 'micro' in f.name.lower()])"
    
    - name: Process papers
      if: steps.check_status.outputs.status == 'success'
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      run: |
        python HF-day-paper-deepseek.py
        echo "Checking generated files..."
        ls -l stats/
        ls -l newsletters/
        ls -l images/
        ls -l audio/
        ls -l HF-day-paper-deepseek/
    
    - name: Commit and push if there are changes
      if: steps.check_status.outputs.status == 'success'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git commit -m "Update paper summaries and poster by DeepSeek" -a || exit 0
        git push
        
    - name: Send notification on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { repo, owner } = context.repo;
          const run_id = context.runId;
          const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
          
          github.rest.issues.create({
            owner,
            repo,
            title: `🚨 工作流运行失败 - ${new Date().toISOString()}`,
            body: `工作流运行失败，请检查日志：\n${run_url}`,
            labels: ['bug']
          });